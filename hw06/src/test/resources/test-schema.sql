DROP SCHEMA IF EXISTS OTUS_HW_06_TEST CASCADE;
CREATE SCHEMA OTUS_HW_06_TEST;

CREATE SEQUENCE OTUS_HW_06_TEST.AUTHOR_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE OTUS_HW_06_TEST.GENRE_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE OTUS_HW_06_TEST.BOOK_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE OTUS_HW_06_TEST.COMMENT_ID_SEQ START WITH 1 INCREMENT BY 1 CACHE 100;

CREATE TABLE OTUS_HW_06_TEST.AUTHORS (
    ID BIGINT DEFAULT NEXT VALUE FOR OTUS_HW_06_TEST.AUTHOR_ID_SEQ,
    FULL_NAME VARCHAR(255) NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT chk_authors_name_length CHECK (char_length(FULL_NAME) > 0 AND char_length(FULL_NAME) <= 255)
);

CREATE TABLE OTUS_HW_06_TEST.GENRES (
    ID BIGINT DEFAULT NEXT VALUE FOR OTUS_HW_06_TEST.GENRE_ID_SEQ,
    NAME VARCHAR(255) NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT chk_genres_name_length CHECK (char_length(NAME) > 0 AND char_length(NAME) <= 255)
);

CREATE TABLE OTUS_HW_06_TEST.BOOKS (
    ID BIGINT DEFAULT NEXT VALUE FOR OTUS_HW_06_TEST.BOOK_ID_SEQ,
    TITLE VARCHAR(255) NOT NULL,
    YEAR_OF_PUBLISHED INTEGER NOT NULL ,
    PRIMARY KEY (ID),
    CONSTRAINT chk_books_title_length CHECK (char_length(TITLE) > 0 AND char_length(TITLE) <= 255),
    CONSTRAINT chk_books_year_of_published_is_positive CHECK (YEAR_OF_PUBLISHED > 0)
);

CREATE TABLE OTUS_HW_06_TEST.LNK_BOOKS_AUTHORS (
    BOOK_ID BIGINT NOT NULL REFERENCES OTUS_HW_06_TEST.BOOKS(ID) ON DELETE RESTRICT,
    AUTHOR_ID BIGINT  NOT NULL REFERENCES OTUS_HW_06_TEST.AUTHORS(ID) ON DELETE RESTRICT,
    PRIMARY KEY (BOOK_ID, AUTHOR_ID),
    UNIQUE (BOOK_ID,AUTHOR_ID)
);

CREATE TABLE OTUS_HW_06_TEST.LNK_BOOKS_GENRES (
    BOOK_ID BIGINT  NOT NULL REFERENCES OTUS_HW_06_TEST.BOOKS(ID) ON DELETE RESTRICT,
    GENRE_ID BIGINT  NOT NULL REFERENCES OTUS_HW_06_TEST.GENRES(ID) ON DELETE RESTRICT,
    PRIMARY KEY (BOOK_ID, GENRE_ID),
    UNIQUE (BOOK_ID, GENRE_ID)
);

CREATE TABLE OTUS_HW_06_TEST.COMMENTS (
    ID  BIGINT  DEFAULT NEXT VALUE FOR OTUS_HW_06_TEST.COMMENT_ID_SEQ,
    BOOK_ID BIGINT REFERENCES OTUS_HW_06_TEST.BOOKS(ID) ON DELETE CASCADE,
    COMMENT_TEXT VARCHAR(2000) NOT NULL,
    CONSTRAINT chk_comment_length CHECK (char_length(COMMENT_TEXT) > 0 AND char_length(COMMENT_TEXT) <= 255),
    PRIMARY KEY (ID)
);